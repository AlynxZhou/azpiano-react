{"version":3,"sources":["Map.js","Log.js","AudioPlayer.js","Base64Decoder.js","App.js","serviceWorker.js","index.js"],"names":["Block","this","props","pressed","Paper","className","code","notesDigits","note","React","Component","Map","block","index","Grid","item","xs","key","state","row","container","justify","spacing","map","renderBlock","bind","keymap","renderRow","Log","TextField","defaultValue","join","variant","InputProps","readOnly","fullWidth","rows","multiline","Button","color","onClick","onDeleteClick","onSpaceClick","onReturnClick","AudioPlayer","opts","context","AudioContext","gainNode","createGain","gain","value","connect","destination","sources","stopDelay","decodeAudioData","id","buffer","createBufferSource","start","currentTime","stop","Base64Decoder","keyStr","input","i","length","charAt","substring","replace","chr1","chr2","chr3","enc2","enc3","enc4","bytes","removePaddingChars","ArrayBuffer","uarray","Uint8Array","j","indexOf","OGG_HEADER_LENGTH","App","player","decoder","log","defaultKeymap","codesNotes","grid","notesBuffers","k","decode","document","addEventListener","onKeyDown","onKeyUp","removeEventListener","event","preventDefault","ctrlKey","repeat","push","setState","play","pause","pop","Container","maxWidth","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8277a463.chunk.js","sourcesContent":["import React from 'react'\nimport notesDigits from './notesDigits.json'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport './Map.css'\n\nclass Block extends React.Component {\n  render() {\n    if (this.props.pressed) {\n      return (\n        <Paper className=\"grid grid-pressed\">\n          <span className=\"grid-code\">{this.props.code}</span>\n          <br />\n          <span className=\"grid-digit\">{notesDigits[this.props.note]}</span>\n        </Paper>\n      )\n    }\n    return (\n      <Paper className=\"grid\">\n        <span className=\"grid-code\">{this.props.code}</span>\n        <br />\n        <span className=\"grid-digit\">{notesDigits[this.props.note]}</span>\n      </Paper>\n    )\n  }\n}\n\nclass Map extends React.Component {\n  renderBlock(block, index) {\n    return (\n      <Grid item xs key={index}>\n        <Block\n          code={block[0]}\n          note={block[1]}\n          pressed={this.props.state[block[0]]}\n        />\n      </Grid>\n    )\n  }\n\n  renderRow(row, index) {\n    return (\n      <Grid container justify=\"center\" spacing={3} key={index}>\n        {row.map(this.renderBlock.bind(this))}\n      </Grid>\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"map\">\n        <Paper>\n          <div className=\"map-inner\">\n            {this.props.keymap.map(this.renderRow.bind(this))}\n          </div>\n        </Paper>\n      </div>\n    )\n  }\n}\n\nexport default Map\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport './Log.css'\n\nclass Log extends React.Component {\n  render() {\n    return (\n      <div className=\"log\">\n        <Paper>\n          <div className=\"log-inner\">\n            <div className=\"log-text\">\n              <TextField\n                defaultValue={this.props.state.join('')}\n                variant=\"outlined\"\n                InputProps={{readOnly: true}}\n                fullWidth\n                rows=\"8\"\n                multiline\n              />\n            </div>\n            <div className=\"log-buttons\">\n              <Button className=\"log-button\">Ctrl +</Button>\n              <Button\n                className=\"log-button\"\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={this.props.onDeleteClick}\n              >Backspace</Button>\n              <Button\n                className=\"log-button\"\n                variant=\"contained\"\n                onClick={this.props.onSpaceClick}\n              >Space</Button>\n              <Button\n                className=\"log-button\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={this.props.onReturnClick}\n              >Enter</Button>\n            </div>\n          </div>\n        </Paper>\n      </div>  \n    )\n  }\n}\n\nexport default Log\n","class AudioPlayer {\n  constructor(opts = {}) {\n    this.context = new AudioContext()\n    this.gainNode = this.context.createGain();\n    this.gainNode.gain.value = 1\n    this.gainNode.connect(this.context.destination)\n    this.sources = {}\n    this.stopDelay = opts.stopDelay || 0.3\n    this.decodeAudioData = this.context.decodeAudioData.bind(this.context)\n  }\n\n  play(id, buffer) {\n    if (this.sources[id] != null) {\n      return\n    }\n    this.sources[id] = this.context.createBufferSource()\n    this.sources[id].buffer = buffer\n    this.sources[id].connect(this.gainNode)\n    this.sources[id].start(this.context.currentTime)\n  }\n\n  pause(id) {\n    if (this.sources[id] == null) {\n      return\n    }\n    this.sources[id].stop(this.context.currentTime + this.stopDelay)\n    delete this.sources[id]\n  }\n}\n\nexport default AudioPlayer\n","class Base64Decoder {\r\n  constructor() {\r\n    this.keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\"\r\n  }\r\n\r\n  removePaddingChars(input) {\r\n    for (let i = input.length - 1; i >= 0; --i) {\r\n      if (input.charAt(i) !== '=') {\r\n        return input.substring(0, i + 1)\r\n      }\r\n    }\r\n    // input.length === 0\r\n    return input\r\n  }\r\n\r\n  decode(input) {\r\n    input = input.replace(/[^A-Za-z0-9+/=]/g, '')\r\n    input = this.removePaddingChars(input)\r\n    const bytes = input.length / 4 * 3\r\n\r\n    const buffer = new ArrayBuffer(bytes)\r\n    const uarray = new Uint8Array(buffer)\r\n    let chr1, chr2, chr3\r\n    let enc1, enc2, enc3, enc4\r\n    let j = 0\r\n\r\n    for (let i = 0; i < bytes; i += 3) {\r\n      enc1 = this.keyStr.indexOf(input.charAt(j++))\r\n      enc2 = this.keyStr.indexOf(input.charAt(j++))\r\n      enc3 = this.keyStr.indexOf(input.charAt(j++))\r\n      enc4 = this.keyStr.indexOf(input.charAt(j++))\r\n\r\n      chr1 = (enc1 << 2) | (enc2 >> 4);\r\n      chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n      chr3 = ((enc3 & 3) << 6) | enc4;\r\n\r\n      uarray[i] = chr1;\r\n      if (enc3 !== 64) {\r\n        uarray[i + 1] = chr2\r\n      }\r\n      if (enc4 !== 64) {\r\n        uarray[i + 2] = chr3\r\n      }\r\n    }\r\n\r\n    return buffer\r\n  }\r\n}\r\n\r\nexport default Base64Decoder\r\n","import React from 'react'\nimport Map from './Map'\nimport Log from './Log'\nimport AudioPlayer from './AudioPlayer'\nimport Base64Decoder from './Base64Decoder'\nimport defaultKeymap from './keymap/default.json'\nimport notesBuffers from './notesBuffers.json'\nimport notesDigits from './notesDigits.json'\nimport './App.css'\nimport Container from '@material-ui/core/Container'\n\nconst OGG_HEADER_LENGTH = \"data:audio/ogg;base64,\".length\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.player = new AudioPlayer()\n    this.decoder = new Base64Decoder()\n    this.state = {\n      log: [],\n      keymap: defaultKeymap,\n      map: {}\n    }\n\n    this.codesNotes = {}\n    for (let row of this.state.keymap) {\n      for (let grid of row) {\n        this.codesNotes[grid[0]] = grid[1]\n      }\n    }\n\n    this.notesBuffers = {}\n    for (let k in notesBuffers) {\n      this.player.decodeAudioData(this.decoder.decode(\n        notesBuffers[k].substring(OGG_HEADER_LENGTH)\n      ), (buffer) => {\n        this.notesBuffers[k] = buffer\n      })\n    }\n\n    this.notesDigits = notesDigits\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.onKeyDown.bind(this))\n    document.addEventListener('keyup', this.onKeyUp.bind(this))\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.onKeyDown.bind(this))\n    document.removeEventListener('keyup', this.onKeyUp.bind(this))\n  }\n\n  onKeyDown(event) {\n    event.preventDefault()\n    if (event.ctrlKey) {\n      switch (event.code) {\n        case 'Backspace':\n          this.onDeleteClick()\n          break\n        case 'Space':\n          this.onSpaceClick()\n          break\n        case 'Enter':\n          this.onReturnClick()\n          break\n        default:\n          break\n      }\n      return\n    }\n    if (event.repeat || this.codesNotes[event.code] == null) {\n      return\n    }\n    const code = event.code\n    const note = this.codesNotes[code]\n    const {log, map} = this.state\n    map[code] = true\n    log.push(this.notesDigits[note])\n    this.setState({log, map})\n    this.player.play(note, this.notesBuffers[note])\n  }\n\n  onKeyUp(event) {\n    event.preventDefault()\n    if (event.repeat || this.codesNotes[event.code] == null) {\n      return\n    }\n    const code = event.code\n    const note = this.codesNotes[code]\n    const {map} = this.state\n    map[code] = false\n    this.setState({map})\n    this.player.pause(note)\n  }\n\n  onDeleteClick() {\n    const {log} = this.state\n    log.pop()\n    this.setState({log})\n  }\n\n  onSpaceClick() {\n    const {log} = this.state\n    log.push(' ')\n    this.setState({log})\n  }\n\n  onReturnClick() {\n    const {log} = this.state\n    log.push('\\n')\n    this.setState({log})\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Container maxWidth=\"xl\">\n          <Map\n            keymap={this.state.keymap}\n            state={this.state.map}\n          />\n          <Log\n            onDeleteClick={this.onDeleteClick.bind(this)}\n            onSpaceClick={this.onSpaceClick.bind(this)}\n            onReturnClick={this.onReturnClick.bind(this)}\n            state={this.state.log}\n          />\n        </Container>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}